import requests
import datetime
import csv
import re

def main():

    content = fetch()
    formatted = scrape(content)

    # write to file
    open('rhel_table_data.csv', 'w+').write(formatted)
    
    last_monday_date = get_last_monday_date()
    
    formatted_list = csv_to_list(formatted)
    formatted_list_date = date_format(formatted_list)
    target_week = fetch_target_week(formatted_list_date, last_monday_date)


def fetch():

    # get html object(text) with split(\n)
    content = requests.get('https://rhn.redhat.com/errata/rhel-server-6-errata.html').text.split('\n')
    return content


def scrape(content):

    # grep errataTableData
    data_def = ''
    for line in content:
        if 'errataTableData' in line:
            data_def = line
            break

    # generate a char array from the HTML
    char_arr = []
    prev = ''
    write_to_arr = False
    
    # ignore 
    for char in data_def:
        if write_to_arr:
            char_arr.append(char)
        if char == '[' and prev == '[':
            write_to_arr = True
        if char == ']' and prev == ']':
            write_to_arr = False
        prev = char

    # re-join blocks at beginning of the char_arr
    data_str = '[[' + ''.join(char_arr)

    # clean up the data so it's in a csv with every line containing a row
    formatted = data_str.replace('],[', ']\n[')\
                        .replace(']', '')\
                        .replace('[', '')
    
    return formatted


def get_last_monday_date():
    
    today = datetime.date.today()
    weekday = today.weekday()
    last_monday_date = today - datetime.timedelta(days=weekday)

    return last_monday_date


def csv_to_list(formatted):
    with open('rhel_table_data.csv', 'r') as f:
        render = csv.reader(f)
        formatted_list = list(render)

    return formatted_list

# change date type string to datetime to compare to target week
# eliminate list element which is no date 
def date_format(formatted_list):
    formatted_list_date = []
    for i in range(0, len(formatted_list)):
        if re.search(r'201.-..-*', formatted_list[i][4]) != None:
            formatted_list[i][4] = datetime.datetime.strptime(formatted_list[i][4], "'%Y-%m-%d'").date() 
            formatted_list_date.append(formatted_list[i])
    return formatted_list_date

def fetch_target_week(formatted_list_date, last_monday_date):
    target_week = []
    for i in range(0, len(formatted_list_date)): 
        print(formatted_list_date[i][4])
        if formatted_list_date[i][4] < last_monday_date:
            target_week.append(formatted_list_date[i])
    return target_week

# __main__: module name is named by __main__ when the python script execute directly
# if this module is called by other module by import statement, the main() does not execute
if __name__ == '__main__':
    main()


